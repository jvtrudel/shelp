#! /bin/bash

shelp()(
 set -eu -o pipefail


 failed(){
     >&2 echo -e "\nSHELP ERROR\nFailed $@\n" && exit 1 ;
 }

 usage(){
 cat <<-EOM

   NAME
      shelp  -  Framework lÃ©ger pour la gestions de scripts shell

EOM

 }

  install(){
    NAME=${1/\:/\/}
    NAME=${NAME/@/\/}
    NAME=$(basename $NAME)
    NAME=${NAME%.*}
    git clone $1 $HOME/.local/share/$NAME || failed to retrieve project $NAME "$1"
    ln -s $HOME/.local/share/$NAME/bin/$NAME  $HOME/.local/bin/shelp-$NAME
  }


  uninstall(){
    NAME=$1
    rm -rf $HOME/.local/share/$NAME \
    && rm $HOME/.local/bin/shelp-$NAME || failed to find project $NAME

  }



# Parse et valide les arguments
SHELP_COMMAND=${1:-usage}

case ${SHELP_COMMAND} in
  usage|help|h|-h|--help) set -- usage ${@:2} ;;
  i|install) set -- install ${@:2} ;;
  u|uninstall|remove) set -- uninstall ${@:2} ;;
  *)
    echo "Commande '$1' non reconnu"; exit 1
    ;;
esac

# execute
$@

)


[ "${BASH_SOURCE[0]}"  != "$0" ] || shelp $@
