#! /bin/bash

shelp()(
 set -eu -o pipefail

 failed(){
     >&2 echo -e "\nSHELP ERROR\nFailed $@\n" && exit 1 ;
 }

 usage(){
 cat <<-EOM

   NAME
      shelp  -  Framework léger pour la gestions de scripts shell

   SYNOPSIS

    Information sur l'état de shelp
      Affiche l'aide
        shelp
        shelp help|man|usage

    Gestion de shelp
      Installe
        curl gitlab.local/datalyse/shelp/-/raw/master/scripts/install_shelp | bash
      Désinstalle
        shelp uninstall|remove|delete
      Met à jour
        shelp update

      Gestion des scripts
        shelp install <git repo>    # installe un script
        shelp uninstall <script id>
        shelp update <script id>

      Édition des scripts
        Génère un projet de script
          shelp new \$SCRIPT_ID
        Relie le script à un repo remote
          shelp link \$SCRIPT_ID \$ORIGIN_URL
        Affiche le répertoire vers le script
          shelp path \$SCRIPT_ID
        Affiche le path vers le répertoire du script
          shelp dir \$SCRIPT_ID
        Sauvegarde des modifications
          shelp save \$SCRIPT_ID [ "\$COMMIT_MESSAGE" ]

EOM
 }

  install(){
    NAME=${1/\:/\/}
    NAME=${NAME/@/\/}
    NAME=$(basename $NAME)
    NAME=${NAME%.*}
    git clone $1 $HOME/.local/share/$NAME || failed to retrieve project $NAME "$1"
    ln -s $HOME/.local/share/$NAME/bin/$NAME  $HOME/.local/bin/shelp-$NAME
    ln -s $HOME/.local/share/$NAME/bin/$NAME  $HOME/.local/bin/$NAME

  }


  uninstall(){
    NAME=$1
    rm -rf $HOME/.local/share/$NAME \
    && rm $HOME/.local/bin/shelp-$NAME  && rm $HOME/.local/bin/$NAME \
    || failed to find project $NAME
  }

  update(){
    NAME=${1:-shelp}
    # todo: gestion d'erreur
    git -C $HOME/.local/share/$NAME  pull || failed to update "'${NAME}'"
  }

  list(){
    { ls $HOME/.local/bin/ 2> /dev/null || echo No script found ; } \
    | grep ^shelp-| sed 's/shelp-\(.*\)/\1/'

  }

# Parse et valide les arguments
SHELP_COMMAND=${1:-usage}

case ${SHELP_COMMAND} in
  usage|help|h|-h|--help) set -- usage ${@:2} ;;
  i|install) set -- install ${@:2} ;;
  r|uninstall|remove) set -- uninstall ${@:2} ;;
  u|update) set -- update ${@:2} ;;
  l|list|ls) set -- list ${@:2} ;;
  *)
    echo "Commande '$1' non reconnu"; exit 1
    ;;
esac

# execute
$@

)


[ "${BASH_SOURCE[0]}"  != "$0" ] || shelp $@
